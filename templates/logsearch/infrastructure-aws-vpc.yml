meta:
  environment: logsearch-aws-vpc

  stemcell:
    name: bosh-aws-xen-ubuntu-trusty-go_agent
    version: latest

  security_groups: (( merge ))
  dns: [ 10.10.0.2 ]
  zones:
    z1:
      ipmask: (( merge ))
      subnet_id: (( merge ))
      az: (( merge ))

  instances:
    api: (( merge || 1 ))
    ingestor: (( merge || 1 ))
    log_parser: (( merge || 1 ))
    elasticsearch_persistent: (( merge || 1 ))

  instance_types:
    common: (( merge || "m1.small" ))
    elasticsearch:  (( merge || "m1.small" ))

  persistent_disks:
    queue: (( merge || 1024 ))
    elasticsearch: (( merge || 10240 ))



update:
  canaries: 1
  max_in_flight: 50
  canary_watch_time: 1000-30000
  update_watch_time: 1000-30000
  serial: true

compilation:
  cloud_properties:
    instance_type: (( meta.instance_types.common ))
    availability_zone: (( meta.zones.z1.az ))

resource_pools:
  - name: common
    cloud_properties:
      instance_type: (( meta.instance_types.common ))
      availability_zone: (( meta.zones.z1.az ))

  - name: elasticsearch
    cloud_properties:
      instance_type: (( meta.instance_types.elasticsearch ))
      availability_zone: (( meta.zones.z1.az ))

jobs:
- name: api
  instances: (( meta.instances.api ))
  persistent_disk: (( meta.persistent_disks.elasticsearch ))
  networks:
  - name: default
    static_ips: (( static_ips(0,5) ))

- name: ingestor
  instances: (( meta.instances.ingestor ))
  networks:
  - name: default
    static_ips: (( static_ips(1,6) ))

- name: queue
  instances: 1
  persistent_disk: (( meta.persistent_disks.queue ))
  networks:
  - name: default
    static_ips: (( static_ips(2) ))

- name: log_parser
  instances: (( meta.instances.log_parser ))

- name: elasticsearch_persistent
  instances: (( meta.instances.elasticsearch_persistent ))
  persistent_disk: (( meta.persistent_disks.elasticsearch ))
  networks:
  - name: default
    static_ips: (( static_ips(3,4,7,8,9) ))


networks:
  - name: default
    type: manual
    subnets:
      - range: (( meta.zones.z1.ipmask ".0/24" ))
        name: default_unused
        reserved:
          - (( meta.zones.z1.ipmask ".2 - " meta.zones.z1.ipmask ".5" ))
        static:
          - (( meta.zones.z1.ipmask ".6 - " meta.zones.z1.ipmask ".50" ))
        gateway: (( meta.zones.z1.ipmask ".1" ))
        dns: (( meta.dns ))
        cloud_properties:
          security_groups: (( meta.security_groups ))
          subnet: (( meta.zones.z1.subnet_id ))
          availability_zone: (( meta.zones.z1.az ))
